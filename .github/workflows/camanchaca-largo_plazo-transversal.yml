name: 'Deploy Cloud Run Transversal Services'

on:
  push:
    paths-ignore:
      - 'Apps/largo_plazo/biomass/**'
      - 'Apps/largo_plazo/capacity/**'
      - 'Apps/largo_plazo/optimization/**'
      - 'Apps/largo_plazo/orders/**'
      - 'Apps/largo_plazo/parameterization/**'
    branches:  ["main", "dev"]

env:
  GCP_REGION: us-central1
  IMAGE_NAME: transversal
  APP_DIR: Apps/largo_plazo/transversal
  REGISTRY: us-central1-docker.pkg.dev

jobs:
  deploy-cloud-run:
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: 'write'

    steps:

      - name: Set Variables
        id: set_variables
        run: |-
          if [[ "${{ github.base_ref }}" == "main" || "${{ github.ref }}" == "refs/heads/main" ]]; then
            echo "GCP_PROJECT=camanchaca-portalplanificacion" >> $GITHUB_ENV
            echo "CONTAINER_REPO=camanchaca-portalplanificacion/camanchaca-largo-plazo-prodigio-registry" >> $GITHUB_ENV
            echo "NODE_ENV=PROD" >> $GITHUB_ENV
          fi

          if [[ "${{ github.base_ref }}" == "dev" || "${{ github.ref }}" == "refs/heads/dev" ]]; then
            echo "GCP_PROJECT=camanchaca-portalplanificacion" >> $GITHUB_ENV
            echo "CONTAINER_REPO=camanchaca-portalplanificacion/camanchaca-largo-plazo-prodigio-registry" >> $GITHUB_ENV
            echo "NODE_ENV=DEV" >> $GITHUB_ENV
          fi

      - uses: 'actions/checkout@v4'
      
      - name: Kiuwan Baseline Analysis
        uses: 'lsacera/KiuwanBaselineAction@v1.0'
        with:
          project: camanchaca-largo_plazo-transversal
          userid: ${{ secrets.KIUWAN_USER }}
          password: ${{ secrets.KIUWAN_PASS }}
      
      - uses: 'gradle/gradle-build-action@v2'

      - name: Run build with Gradle Wrapper
        run: |-
          chmod +x ./gradlew 
          ./gradlew -b ${{ env.APP_DIR }}/build.gradle build

      - name: Google Auth
        id: auth
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: ${{ secrets.GCP_SERVICE_KEY }}

      - name: Docker Auth
        id: docker-auth
        uses: 'docker/login-action@v3'
        with:
          username: _json_key
          password: ${{ secrets.GCP_SERVICE_KEY }}
          registry: ${{ env.REGISTRY }}

      - name: Build and Push Container
        id: docker-build-push
        env:
          REGISTRY_IMAGE: ${{ env.REGISTRY }}/${{ env.CONTAINER_REPO }}/${{ env.IMAGE_NAME}}
        run: |-
          cd ${{ env.APP_DIR }}
          docker build --cache-from ${{ env.REGISTRY_IMAGE }}:latest -t ${{ env.REGISTRY_IMAGE }}:${{ github.sha }} -t ${{ env.REGISTRY_IMAGE }}:latest ./
          docker push ${{ env.REGISTRY_IMAGE }}:${{ github.sha }} 
          docker push ${{ env.REGISTRY_IMAGE }}:latest

      - name: Create Service declaration
        env:
          REGISTRY_IMAGE: ${{ env.REGISTRY }}/${{ env.CONTAINER_REPO }}/${{ env.IMAGE_NAME}}
        run: |-
          export CLOUD_RUN_SERVICE_ACCOUNT="${{ vars.CLOUD_RUN_SERVICE_ACCOUNT }}"
          export REGISTRY_IMAGE="${{ env.REGISTRY_IMAGE }}"
          export GITHUB_SHA="${{ github.sha }}"
          export NODE_ENV="${{ env.NODE_ENV }}"
          envsubst < ./service.yaml > new_service.yaml
      
      - uses: 'google-github-actions/setup-gcloud@v1'

      - name: 'Deploy to Cloud Run'
        run: |-
          gcloud run services replace new_service.yaml --region=${{ env.GCP_REGION }}
          gcloud run services set-iam-policy ${{ env.IMAGE_NAME }} policy.yaml --region=${{ env.GCP_REGION }}
